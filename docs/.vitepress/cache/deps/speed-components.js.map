{
  "version": 3,
  "sources": ["../../../../src/components/index.ts", "../../../../src/components/IconFont/index.tsx"],
  "sourcesContent": ["/*\r\n * @Author: ykx\r\n * @Date: 2023-02-06 18:06:47\r\n * @LastEditTime: 2024-03-19 11:39:25\r\n * @LastEditors: Anxure\r\n * @Description:\r\n */\r\nimport type { App, Component } from 'vue'\r\nimport { computed, ref } from 'vue'\r\nimport FullModal from './FullModal/index.vue'\r\nimport CollapseHz from './CollapseHz/index.vue'\r\nimport FilePreviewItem from './FilePreviewItem/index.vue'\r\nimport IconFont from './IconFont/index'\r\n\r\n// 组件列表\r\nconst components: Component[] = [FullModal, CollapseHz, FilePreviewItem, IconFont]\r\n\r\n// AJAX 方法类型\r\ntype AjaxMethod = (params?: any) => Promise<any>\r\n\r\n// 全局配置类型\r\nexport interface GlobalConfig {\r\n  iconfontUrl?: string\r\n  registerGlobal?: boolean // 是否注册为全局组件\r\n  apis?: {\r\n    [key: string]: AjaxMethod\r\n  }\r\n}\r\n\r\n// 默认配置\r\nconst defaultConfig: GlobalConfig = {\r\n  registerGlobal: true,\r\n  iconfontUrl: import.meta.env.VITE_ICONFONT_URL,\r\n  apis: {}\r\n}\r\n\r\n// 使用 ref 创建响应式配置\r\nconst configRef = ref<GlobalConfig>({ ...defaultConfig })\r\n\r\n// 使用 computed 包装配置，确保响应式\r\nconst currentConfig = computed(() => configRef.value)\r\n\r\n// 设置全局配置\r\nexport const setConfig = (config: Partial<GlobalConfig>) => {\r\n  configRef.value = {\r\n    ...configRef.value,\r\n    ...config\r\n  }\r\n}\r\n\r\nconst install = (app: App, config?: Partial<GlobalConfig>) => {\r\n  // 合并配置\r\n  if (config) {\r\n    setConfig(config)\r\n  }\r\n\r\n  // 注册组件\r\n  if (currentConfig.value.registerGlobal) {\r\n    components.forEach(component => {\r\n      app.component(component.name as string, component as any)\r\n    })\r\n  }\r\n\r\n  // 注入响应式配置\r\n  app.provide('speed-components-config', currentConfig)\r\n}\r\n\r\nexport { default as FullModal } from './FullModal/index.vue'\r\nexport { default as CollapseHz } from './CollapseHz/index.vue'\r\nexport { default as FilePreviewItem } from './FilePreviewItem/index.vue'\r\nexport { default as IconFont } from './IconFont/index'\r\n\r\nexport default {\r\n  install,\r\n  setConfig,\r\n  version: '0.1.0'\r\n}\r\n", "/*\r\n * @Author: ykx\r\n * @Date: 2022-05-30 17:13:19\r\n * @LastEditTime: 2024-01-22 14:44:32\r\n * @LastEditors: Anxure\r\n * @Description:支持iconfont & antd图标组件\r\n * @FilePath: \\easycube-apps\\packages\\components\\src\\globalComponents\\IconFont\\index.tsx\r\n */\r\n\r\nimport { type PropType, defineComponent, computed, unref, inject, ref } from 'vue';\r\nimport { createFromIconfontCN } from '@ant-design/icons-vue';\r\nexport default defineComponent({\r\n  name: 'SIconFont',\r\n  props: {\r\n    iconRender: {\r\n      type: Function,\r\n      default: null,\r\n    },\r\n    type: {\r\n      type: String as PropType<string>,\r\n      default: '',\r\n    },\r\n    prefix: {\r\n      type: String,\r\n      default: 'icon-',\r\n    },\r\n    color: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    size: {\r\n      type: [String, Number] as PropType<string | number>,\r\n      default: 14,\r\n    },\r\n    scriptUrl: {\r\n      type: Array as PropType<string[]>,\r\n      default: () => [],\r\n    },\r\n    imgModule: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n    imgStyle: {\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n  },\r\n  setup(props, { attrs, }) {\r\n    const config = inject('speed-components-config', ref({\r\n      iconfontUrl: ''\r\n    }));\r\n    let scriptUrls = [config?.value?.iconfontUrl];\r\n    const wrapStyleObj = computed(() => {\r\n      const { size, color } = props;\r\n      const fontSize = typeof size === 'string' ? parseInt(size) : size;\r\n      return {\r\n        fontSize: fontSize + 'px',\r\n        color,\r\n      };\r\n    });\r\n    if (props.iconRender) {\r\n      return () => {\r\n        return (\r\n          <props.iconRender\r\n            style={{ color: props.color, fontSize: props.size + 'px' }}\r\n          />\r\n        );\r\n      };\r\n    }\r\n    // 实例化组件\r\n    let MyIconfontComponent = createFromIconfontCN({\r\n      scriptUrl: scriptUrls,\r\n    });\r\n    if (props.scriptUrl) {\r\n      //整合外界传入的地址\r\n      scriptUrls = [...new Set(scriptUrls.concat(props.scriptUrl))];\r\n      MyIconfontComponent = createFromIconfontCN({\r\n        scriptUrl: scriptUrls,\r\n      });\r\n    }\r\n    return () => {\r\n      const { type, prefix, imgModule, imgStyle } = props;\r\n      return imgModule ? (\r\n        <img\r\n          style={{ ...unref(imgStyle), ...(attrs.style as any) }}\r\n          src={imgModule}\r\n        />\r\n      ) : (\r\n        <MyIconfontComponent\r\n          type={type.startsWith(prefix) ? type : prefix + type}\r\n          {...attrs}\r\n          style={{ ...unref(wrapStyleObj), ...(attrs.style as any) }}\r\n        />\r\n      );\r\n    };\r\n  },\r\n});\r\n"],
  "mappings": "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",
  "names": ["default"]
}

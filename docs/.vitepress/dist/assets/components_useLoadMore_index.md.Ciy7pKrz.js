import{_ as i,C as d,c as n,o,aL as h,G as s,j as e,a as r}from"./chunks/framework.CUeqSQHK.js";const y=JSON.parse('{"title":"useLoadMore","description":"","frontmatter":{},"headers":[],"relativePath":"components/useLoadMore/index.md","filePath":"components/useLoadMore/index.md"}'),l={name:"components/useLoadMore/index.md"};function p(c,t,k,E,g,u){const a=d("demo");return o(),n("div",null,[t[0]||(t[0]=h(`<h1 id="useloadmore" tabindex="-1">useLoadMore <a class="header-anchor" href="#useloadmore" aria-label="Permalink to &quot;useLoadMore&quot;">​</a></h1><p>加载更多 Hook，支持无限滚动加载。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useLoadMore } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@/hooks/useLoad&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  loading</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  noMore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  initLoad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  onLoadMore</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useLoadMore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fetchData, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  extraParams: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 额外参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  hasPagination: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>ajaxFn</td><td>请求数据的函数</td><td><code>Function | Ref&lt;Function&gt;</code></td><td>-</td></tr><tr><td>extraOptions</td><td>额外配置选项</td><td><code>Ref&lt;OptionsType&gt;</code></td><td><code>{ extraParams: {}, hasPagination: true }</code></td></tr></tbody></table><h3 id="extraoptions-配置项" tabindex="-1">extraOptions 配置项 <a class="header-anchor" href="#extraoptions-配置项" aria-label="Permalink to &quot;extraOptions 配置项&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>extraParams</td><td>额外请求参数</td><td><code>Record&lt;string, any&gt;</code></td><td><code>{}</code></td></tr><tr><td>hasPagination</td><td>是否启用分页</td><td><code>boolean</code></td><td><code>true</code></td></tr><tr><td>afterFetch</td><td>请求后处理函数</td><td><code>(data: any, res?: any) =&gt; any</code></td><td>-</td></tr></tbody></table><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>noMore</td><td>是否没有更多数据</td><td><code>Ref&lt;boolean&gt;</code></td></tr><tr><td>loading</td><td>加载状态</td><td><code>Ref&lt;boolean&gt;</code></td></tr><tr><td>initLoading</td><td>初始化加载状态</td><td><code>Ref&lt;boolean&gt;</code></td></tr><tr><td>list</td><td>数据列表</td><td><code>Ref&lt;any[]&gt;</code></td></tr><tr><td>initLoad</td><td>初始化加载</td><td><code>Function</code></td></tr><tr><td>onLoadMore</td><td>加载更多</td><td><code>Function</code></td></tr></tbody></table><h2 id="代码演示" tabindex="-1">代码演示 <a class="header-anchor" href="#代码演示" aria-label="Permalink to &quot;代码演示&quot;">​</a></h2><h3 id="基础列表" tabindex="-1">基础列表 <a class="header-anchor" href="#基础列表" aria-label="Permalink to &quot;基础列表&quot;">​</a></h3>`,13)),s(a,{src:"./demos/Basic.vue"}),t[1]||(t[1]=e("h3",{id:"无限滚动列表",tabindex:"-1"},[r("无限滚动列表 "),e("a",{class:"header-anchor",href:"#无限滚动列表","aria-label":'Permalink to "无限滚动列表"'},"​")],-1)),s(a,{src:"./demos/Infinite.vue"})])}const m=i(l,[["render",p]]);export{y as __pageData,m as default};
